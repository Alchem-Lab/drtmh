NOCC started with program [noccmvcc-rpc]. at 12-08-2019 01:19:59
[bench_runner.cc:327] Use TCP port 8810
[0m[bench_runner.cc:349] use scale factor: 24; with total 8 threads.
[0m[view.h:48] Start with 0 backups.
[0m[view.cc:10] total 4 backups to assign
[0m[bank_main.cc:132] ycsb param:set len=10 write num=5tx hot10num_hot100num_accounts 100000
[0m[bank_main.cc:141] here0
[0m[Bank]: check workload 17, 17, 17, 16, 17, 16
[util.cc:161] malloc_huge_pages: size = 13883146240huge_page_sz = 2097152flag = 1
[0m[util.cc:178] huge page real size 12.9316
[0m[librdma] get device name mlx4_0, idx 0
[librdma] : Device 0 has 1 ports
[bench_runner.cc:154] Total logger area 0.00390625G.
[0m[bench_runner.cc:165] add RDMA store size 9.76562G.
[0m[bench_runner.cc:174] [Mem] RDMA heap size 3.15816G.
[0m[util.cc:161] malloc_huge_pages: size = 314572800huge_page_sz = 2097152flag = 1
[0m[util.cc:178] huge page real size 0.294922
[0m[util.cc:161] malloc_huge_pages: size = 314572800huge_page_sz = 2097152flag = 1
[0m[util.cc:178] huge page real size 0.294922
[0m[util.cc:161] malloc_huge_pages: size = 314572800huge_page_sz = 2097152flag = 1
[0m[util.cc:178] huge page real size 0.294922
[0m[Bank], total 9600000 accounts loaded
[Runner] local db size: 294.312 MB
[Runner] Cache size: 0 MB
registerring 13883146240registerring 13883146240registerring 13883146240registerring 13883146240registerring 13883146240registerring 13883146240registerring 13883146240registerring 13883146240registerring 13883146240threadid=4: all 4 qps connected
threadid=0: all 4 qps connected
threadid=9: all 4 qps connected
threadid=7: all 4 qps connected
worker: 0 binding 0
worker: 1 binding 1
worker: 2 binding 2
worker: 3 binding 3
worker: 4 binding 4
worker: 5 binding 5
worker: 6 binding 6
worker: 7 binding 7
[Global sequence running] !
[bench_listener2.cc:73] New monitor running!
[0mthreadid=1: all 4 qps connected
threadid=5: all 4 qps connected
threadid=6: all 4 qps connected
threadid=3: all 4 qps connected
2: 3 out of 4 qps connected. Retry connecting qps...
registerring 13883146240threadid=2: all 4 qps connected
[bench_worker.h:160] Use RDMA for logging.
[0mthreadid=10: all 4 qps connected
[rworker.cc:47] Worker 9 on cpu 1with cor id 0
[0m[bench_listener2.cc:119] All workers has initilized.
[0m[rworker.cc:47] Worker 10 on cpu 9with cor id 0
[0m[bench_listener2.cc:218] [LISTENER] receive start RPC.
[0m[rworker.cc:47] Worker 4 on cpu 8with cor id 0
[rworker.cc:47] Worker 5 on cpu 10with cor id 0
[0m[rworker.cc:47] Worker 3 on cpu 6with cor id 0
[0m[rworker.cc:47] Worker 7 on cpu 14with cor id 0
[0m[rworker.cc:47] Worker 6 on cpu 12with cor id 0
[0m[0m[rworker.cc:47] Worker 1 on cpu 2with cor id 0
[0m[rworker.cc:47] Worker 2 on cpu 4with cor id 0
[0m[rworker.cc:47] Worker 0 on cpu 0with cor id 0
[0mmy throughput 2.674952 M, abort 246171, commit 2674952, abort ratio 0.084273
my throughput 2.708475 M, abort 240215, commit 2708475, abort ratio 0.081465
my throughput 2.711614 M, abort 238977, commit 2711614, abort ratio 0.080993
my throughput 2.349000 K, abort 253, commit 2349, abort ratio 0.097233
[bench_listener2.cc:260] start to exit.
[0mstats for worker 0:
exiting master routine.
exiting master routine.
exiting master routine.
exiting master routine.
exiting master routine.
exiting master routine.
exiting master routine.
exiting master routine.
exiting master routine.
SendPayment executed 187069, latency: 0.046820, rw_size -nan, m 0.043793, 90 0.056573, 99 0.096409
DepositChecking executed 188105, latency: 0.028327, rw_size -nan, m 0.027294, 90 0.034464, 99 0.051710
Balance executed 188082, latency: 0.028247, rw_size -nan, m 0.027345, 90 0.033607, 99 0.049676
Transact saving executed 177703, latency: 0.028006, rw_size -nan, m 0.027296, 90 0.033554, 99 0.047768
Write check executed 187789, latency: 0.043276, rw_size -nan, m 0.041393, 90 0.051474, 99 0.082321
Txn amal executed 177223, latency: 0.063035, rw_size -nan, m 0.057724, 90 0.078707, 99 0.142990
succs ratio 0.933213
[bank_worker.h:125] worker exit.
[0m[bank_worker.h:128] read time: 0ms
[0m[occ_statistics.h:39] read_lat time: 0ms
[0m[occ_statistics.h:40] lock time: 0ms
[0m[occ_statistics.h:41] release_write time: 0ms
[0m[occ_statistics.h:42] renew_lease time: 0ms
[0m[occ_statistics.h:43] commit time: 0ms
[0m[occ_statistics.h:45] 0
[0m[occ_statistics.h:46] 0
[0m[occ_statistics.h:47] 0
[0m[occ_statistics.h:48] 0
[0m[occ_statistics.h:49] 0
[0m[occ_statistics.h:51] log time: 0
[0m[occ_statistics.h:52] temp time: 0ms
[0m[occ_statistics.h:53] release_read time: 0ms
[0m[bench_worker.cc:388] 0: 0
[0m[bench_worker.cc:388] 1: 0
[0m[bench_worker.cc:388] 2: 0
[0m[bench_worker.cc:388] 3: 0
[0m[bench_worker.cc:388] 4: 0
[0m[bench_worker.cc:388] 5: 0
[0m[bench_worker.cc:388] 6: 0
[0m[bench_worker.cc:388] 7: 0
[0m[bench_worker.cc:388] 8: 0
[0m[bench_worker.cc:388] 9: 0
[0m[bench_worker.cc:388] 10: 0
[0m[bench_worker.cc:388] 11: 0
[0m[bench_worker.cc:388] 12: 0
[0m[bench_worker.cc:388] 13: 0
[0m[bench_worker.cc:388] 14: 0
[0m[bench_worker.cc:388] 15: 0
[0m[bench_worker.cc:388] 16: 0
[0m[bench_worker.cc:388] 17: 0
[0m[bench_worker.cc:388] 18: 0
[0m[bench_worker.cc:388] 19: 0
[0m[bench_worker.cc:388] 20: 0
[0m[bench_worker.cc:388] 21: 0
[0m[bench_worker.cc:388] 22: 0
[0m[bench_worker.cc:388] 23: 0
[0m[bench_worker.cc:388] 24: 0
[0m[bench_worker.cc:388] 25: 0
[0m[bench_worker.cc:388] 26: 0
[0m[bench_worker.cc:388] 27: 0
[0m[bench_worker.cc:388] 28: 0
[0m[bench_worker.cc:388] 29: 0
[0m[bench_worker.cc:388] 30: 0
[0m[bench_worker.cc:388] 31: 0
[0m[bench_worker.cc:388] 32: 0
[0m[bench_worker.cc:388] 33: 0
[0m[bench_worker.cc:388] 34: 0
[0m[bench_worker.cc:388] 35: 0
[0m[bench_worker.cc:388] 36: 0
[0m[bench_worker.cc:388] 37: 0
[0m[bench_worker.cc:388] 38: 0
[0m[bench_worker.cc:388] 39: 0
[0mmaster routine exit...
[bench_runner.cc:299] main runner ends.
[0m